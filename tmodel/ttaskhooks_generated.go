package engine

import(
	"github.com/ekara-platform/model"
)

//*****************************************************************************
//
// This file is autogenerated by "go generate .". Do not modify.
//
//*****************************************************************************

// ----------------------------------------------------
// TTaskHooks is a read only representation of the hooks associated to a task
// ----------------------------------------------------
type TTaskHooks interface {
    //HasExecute returns true if the hooks has tasks while executing
    HasExecute() bool
    //Execute returns the executing tasks
    Execute() THook
	
}

// ----------------------------------------------------
// Implementation(s) of TTaskHooks  
// ----------------------------------------------------

//TTaskHooksOnTaskHookHolder is the struct containing the TaskHook in otder to implement TTaskHooks  
type TTaskHooksOnTaskHookHolder struct {
	h 	model.TaskHook
}

//CreateTTaskHooksForTaskHook returns a holder implementing TTaskHooks
func CreateTTaskHooksForTaskHook(o model.TaskHook) TTaskHooksOnTaskHookHolder {
	return TTaskHooksOnTaskHookHolder{
		h: o,
	}
}

//HasExecute returns true if the hooks has tasks while executing
func (r TTaskHooksOnTaskHookHolder) HasExecute() bool{
	return r.h.Execute.HasTasks()
}

//Execute returns the executing tasks
func (r TTaskHooksOnTaskHookHolder) Execute() THook{
	    return CreateTHookForHook(r.h.Execute)
}

